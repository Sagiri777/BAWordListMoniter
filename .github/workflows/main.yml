name: Update Word Lists

on:
  schedule:
    - cron: '0 0 1,20 * *'  # 每天 UTC 时间 0 点运行
  workflow_dispatch:       # 允许手动触发

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up environment
      run: |
        mkdir -p lists
        echo "CSV_FILES=$(pwd)/lists" >> $GITHUB_ENV

    - name: Download files
      run: |
        for list in blacklist whitelist; do
          url="https://prod-notice.bluearchiveyostar.com/prod/ProhibitedWord/${list}.csv"
          if curl -s -f -o "$CSV_FILES/${list}_new.csv" "$url"; then
            echo "Downloaded ${list}.csv successfully"
          else
            echo "::warning::Download failed for ${list}.csv, keeping existing file"
            # 如果下载失败，复制旧文件作为新文件
            if [ -f "lists/${list}.csv" ]; then
              cp "lists/${list}.csv" "$CSV_FILES/${list}_new.csv"
            else
              echo "::warning::No existing ${list}.csv found"
              rm -f "$CSV_FILES/${list}_new.csv"
            fi
          fi
        done

    - name: Compare and update
      run: |
        changed=false
        commit_message="Update word lists:"
        
        for list in blacklist whitelist; do
          new_file="$CSV_FILES/${list}_new.csv"
          current_file="lists/${list}.csv"
          
          if [ ! -f "$new_file" ]; then
            echo "::warning::Skipping ${list}.csv - no new file available"
            continue
          fi

          if [ ! -f "$current_file" ]; then
            echo "New file detected: ${list}.csv"
            mv "$new_file" "$current_file"
            git add "$current_file"
            changed=true
            commit_message+=$'\n'"• Add ${list}.csv"
            continue
          fi

          if ! diff -q "$new_file" "$current_file" >/dev/null; then
            echo "Changes detected in ${list}.csv"
            diff_output=$(diff --color=never -U 0 "$current_file" "$new_file" | grep -v ^@)
            mv "$new_file" "$current_file"
            git add "$current_file"
            changed=true
            commit_message+=$'\n\n'"Changes in ${list}.csv:"
            commit_output+=$'\n'"$diff_output"
          else
            echo "No changes in ${list}.csv"
            rm "$new_file"
          fi
        done

        if $changed; then
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git commit -m "$commit_message"
          git push
        else
          echo "No changes detected. Skipping commit."
        fi
